{"version":3,"sources":["lib/phaseTypes.js","hooks/clockActions.js","hooks/clockReducer.js","hooks/useInterval.js","lib/timerStyles.js","hooks/clockContext.js","lib/convertToTime.js","components/PhaseControl/PhaseControl.js","components/Timer/Timer.js","hooks/useResizeObserver.js","components/AnalogueClock/AnalogueClock.js","components/SliderClock/SliderClock.js","components/ProgressClock/ProgressClock.js","components/TimerControl/TimerControl.js","components/CarouselContainer/CarouselContainer.js","components/Container/Container.js","components/App/App.js","index.js"],"names":["phaseTypes","SESSION","BREAK","actions","INCREMENT_SESSION","DECREMENT_SESSION","UPDATE_SESSION","INCREMENT_BREAK","DECREMENT_BREAK","UPDATE_BREAK","START_TIMER","STOP_TIMER","RESET_TIMER","DECREMENT_TIMER","SWITCH_TO_BREAK_PHASE","SWITCH_TO_SESSION_PHASE","UPDATE_STYLE","reducer","state","action","console","log","type","payload","breakTime","sessionTime","isRunning","timerValue","timerPhase","timerStyle","Error","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","accurateInterval","timerStyles","SIMPLE","PROGRESS","FLIP","ANALOGUE","SLIDER","ClockContext","React","createContext","initialState","ClockProvider","children","useReducer","dispatch","audioRef","play","Provider","value","onIncrement","phaseType","onDecrement","updatePhaseTime","newValue","parseInt","startStopTimer","resetTimer","pause","currentTime","updateTimerStyle","style","preload","ref","src","convertSeconds","minutes","Math","floor","seconds","PhaseControl","label","decrement","increment","updateValue","min","max","handleIncrement","undefined","handleDecrement","btnIconRef","useCallback","node","insertBefore","className","onWheel","e","deltaY","onClick","step","onChange","target","Timer","phase","useResizeObserver","useState","dimensions","setDimensions","containerRef","observer","ResizeObserver","entries","contentRect","width","height","observerRefValue","elementRef","observe","unobserve","AnalogueClock","size","secondHandDeg","minuteHandDeg","transform","SliderClock","minuteTens","minuteSingles","secondTens","secondSingles","arr","map","item","index","ProgressClock","minutesMax","strokeWidth","secRadius","secCircumference","PI","secPercentage","secStrokeDashOffset","minRadius","minCircumference","minXY","minPercentage","minStrokeDashOffset","viewBox","cx","secSize","cy","r","strokeDasharray","transition","strokeDashoffset","minSize","TimerControl","onStartStop","onReset","btnPauseRef","CarouselContainer","setCurrent","touchStart","setTouchStart","touchEnd","setTouchEnd","prevClicked","newIndex","length","nextClicked","onTouchStart","targetTouches","clientX","onTouchMove","onTouchEnd","child","Container","useContext","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bedf9452.chunk.js","sourcesContent":["const phaseTypes = {\r\n    SESSION: 'session',\r\n    BREAK: 'break',\r\n};\r\n\r\nexport default phaseTypes;\r\n","const actions = {\r\n    INCREMENT_SESSION: 'INCREMENT_SESSION',\r\n    DECREMENT_SESSION: 'DECREMENT_SESSION',\r\n    UPDATE_SESSION: 'UPDATE_SESSION',\r\n    INCREMENT_BREAK: 'INCREMENT_BREAK',\r\n    DECREMENT_BREAK: 'DECREMENT_BREAK',\r\n    UPDATE_BREAK: 'UPDATE_BREAK',\r\n    START_TIMER: 'START_TIMER',\r\n    STOP_TIMER: 'STOP_TIMER',\r\n    RESET_TIMER: 'RESET_TIMER',\r\n    DECREMENT_TIMER: 'DECREMENT_TIMER',\r\n    SWITCH_TO_BREAK_PHASE: 'SWITCH_TO_BREAK_PHASE',\r\n    SWITCH_TO_SESSION_PHASE: 'SWITCH_TO_SESSION_PHASE',\r\n    UPDATE_STYLE: 'UPDATE_STYLE',\r\n};\r\n\r\nexport default actions;\r\n","import phaseTypes from '../lib/phaseTypes';\r\nimport actions from './clockActions';\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action.type, '-', action.payload);\r\n\r\n    switch (action.type) {\r\n        case actions.INCREMENT_BREAK:\r\n            return { ...state, breakTime: state.breakTime + 1 };\r\n        case actions.DECREMENT_BREAK:\r\n            return { ...state, breakTime: state.breakTime - 1 };\r\n        case actions.UPDATE_BREAK:\r\n            return { ...state, breakTime: action.payload };\r\n\r\n        case actions.INCREMENT_SESSION:\r\n            return { ...state, sessionTime: state.sessionTime + 1 };\r\n        case actions.DECREMENT_SESSION:\r\n            return { ...state, sessionTime: state.sessionTime - 1 };\r\n        case actions.UPDATE_SESSION:\r\n            return { ...state, sessionTime: action.payload };\r\n\r\n        case actions.START_TIMER:\r\n            return { ...state, isRunning: true };\r\n        case actions.STOP_TIMER:\r\n            return { ...state, isRunning: false };\r\n        case actions.RESET_TIMER:\r\n            return {\r\n                ...state,\r\n                isRunning: false,\r\n                breakTime: 5,\r\n                sessionTime: 25,\r\n                timerValue: 25 * 60,\r\n                timerPhase: phaseTypes.SESSION,\r\n            };\r\n        case actions.DECREMENT_TIMER:\r\n            return { ...state, timerValue: state.timerValue - 1 };\r\n        case actions.SWITCH_TO_BREAK_PHASE:\r\n            return { ...state, timerValue: state.breakTime * 60, timerPhase: phaseTypes.BREAK };\r\n        case actions.SWITCH_TO_SESSION_PHASE:\r\n            return { ...state, timerValue: state.sessionTime * 60, timerPhase: phaseTypes.SESSION };\r\n\r\n        case actions.UPDATE_STYLE:\r\n            return { ...state, timerStyle: action.payload };\r\n\r\n        default:\r\n            throw new Error('No matching action found!');\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n// Accurate Interval from FCC Example\r\nconst accurateInterval = function (fn, time) {\r\n    var cancel, nextAt, timeout, wrapper;\r\n    nextAt = new Date().getTime() + time;\r\n    timeout = null;\r\n    wrapper = function () {\r\n        nextAt += time;\r\n        timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n        return fn();\r\n    };\r\n    cancel = function () {\r\n        return clearTimeout(timeout);\r\n    };\r\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n    return {\r\n        cancel: cancel,\r\n    };\r\n};\r\n\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            // Original setInterval Implementation\r\n            // let id = setInterval(tick, delay);\r\n            // return () => clearInterval(id);\r\n\r\n            // Using Accurate Interval from FCC\r\n            let id = accurateInterval(tick, delay);\r\n            return () => id.cancel();\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","const timerStyles = {\r\n    SIMPLE: 'SIMPLE',\r\n    PROGRESS: 'PROGRESS',\r\n    FLIP: 'FLIP',\r\n    ANALOGUE: 'ANALOGUE',\r\n    SLIDER: 'SLIDER',\r\n};\r\n\r\nconst getStylesArray = () => {\r\n    return Object.keys(timerStyles).map((key) => timerStyles[key]);\r\n};\r\n\r\nexport default timerStyles;\r\nexport { getStylesArray };\r\n","import React, { useContext, useReducer, useRef } from 'react';\r\nimport reducer from './clockReducer';\r\nimport actions from './clockActions';\r\nimport useInterval from './useInterval';\r\nimport phaseTypes from '../lib/phaseTypes';\r\nimport timerStyles from '../lib/timerStyles';\r\n\r\nconst ClockContext = React.createContext();\r\nconst initialState = {\r\n    sessionTime: 25,\r\n    breakTime: 5,\r\n    isRunning: false,\r\n    timerValue: 25 * 60,\r\n    timerPhase: phaseTypes.SESSION,\r\n    timerStyle: timerStyles.SIMPLE,\r\n};\r\n\r\nconst ClockProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const audioRef = useRef(null);\r\n\r\n    const onIncrement = (phaseType) => {\r\n        if (!state.isRunning) {\r\n            if (phaseType === phaseTypes.BREAK) dispatch({ type: actions.INCREMENT_BREAK });\r\n            if (phaseType === phaseTypes.SESSION) {\r\n                dispatch({ type: actions.INCREMENT_SESSION });\r\n                dispatch({ type: actions.SWITCH_TO_SESSION_PHASE });\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDecrement = (phaseType) => {\r\n        if (!state.isRunning) {\r\n            if (phaseType === phaseTypes.BREAK) dispatch({ type: actions.DECREMENT_BREAK });\r\n            if (phaseType === phaseTypes.SESSION) {\r\n                dispatch({ type: actions.DECREMENT_SESSION });\r\n                dispatch({ type: actions.SWITCH_TO_SESSION_PHASE });\r\n            }\r\n        }\r\n    };\r\n\r\n    const updatePhaseTime = (phaseType, value) => {\r\n        const newValue = parseInt(value);\r\n        if (!state.isRunning) {\r\n            if (phaseType === phaseTypes.BREAK)\r\n                dispatch({ type: actions.UPDATE_BREAK, payload: newValue });\r\n            if (phaseType === phaseTypes.SESSION) {\r\n                dispatch({ type: actions.UPDATE_SESSION, payload: newValue });\r\n                dispatch({ type: actions.SWITCH_TO_SESSION_PHASE });\r\n            }\r\n        }\r\n    };\r\n\r\n    const startStopTimer = () => {\r\n        if (state.isRunning) {\r\n            dispatch({ type: actions.STOP_TIMER });\r\n        } else {\r\n            dispatch({ type: actions.START_TIMER });\r\n        }\r\n    };\r\n\r\n    const resetTimer = () => {\r\n        dispatch({ type: actions.RESET_TIMER });\r\n        audioRef.current.pause();\r\n        audioRef.current.currentTime = 0;\r\n    };\r\n\r\n    useInterval(\r\n        () => {\r\n            if (state.timerValue === 0) {\r\n                if (state.timerPhase === phaseTypes.SESSION) {\r\n                    dispatch({ type: actions.SWITCH_TO_BREAK_PHASE });\r\n                }\r\n                if (state.timerPhase === phaseTypes.BREAK) {\r\n                    dispatch({ type: actions.SWITCH_TO_SESSION_PHASE });\r\n                }\r\n                audioRef.current.play();\r\n            } else {\r\n                dispatch({ type: actions.DECREMENT_TIMER });\r\n            }\r\n        },\r\n        state.isRunning ? 1000 : null\r\n    );\r\n\r\n    const updateTimerStyle = (style) => {\r\n        dispatch({ type: actions.UPDATE_STYLE, payload: style });\r\n    };\r\n\r\n    return (\r\n        <ClockContext.Provider\r\n            value={{\r\n                ...state,\r\n                onIncrement,\r\n                onDecrement,\r\n                updatePhaseTime,\r\n                startStopTimer,\r\n                resetTimer,\r\n                updateTimerStyle,\r\n            }}\r\n        >\r\n            {children}\r\n            <audio\r\n                id='beep'\r\n                preload='auto'\r\n                ref={audioRef}\r\n                src='https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav'\r\n            />\r\n        </ClockContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useClockContext = () => {\r\n    return useContext(ClockContext);\r\n};\r\n\r\nexport default ClockProvider;\r\n","const convertSeconds = (value) => {\r\n    let minutes = Math.floor(value / 60);\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n    let seconds = Math.floor(value % 60);\r\n    seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n    return `${minutes}:${seconds}`;\r\n};\r\n\r\nconst convertMiliiSeconds = (value) => {\r\n    let minutes = Math.floor((value % (1000 * 60 * 60)) / (1000 * 60));\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n    let seconds = Math.floor((value % (1000 * 60)) / 1000);\r\n    seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n    return `${minutes}:${seconds}`;\r\n};\r\n\r\nexport { convertSeconds, convertMiliiSeconds };\r\n","import './PhaseControl.css';\r\nimport { CgArrowUpR, CgArrowDownR } from 'react-icons/cg';\r\nimport { useCallback } from 'react';\r\n\r\nconst PhaseControl = ({ label, value, decrement, increment, updateValue, min, max }) => {\r\n    const handleIncrement = () => {\r\n        if (max === undefined) increment(label);\r\n        if (value < max) increment(label);\r\n    };\r\n    const handleDecrement = () => {\r\n        if (min === undefined) decrement(label);\r\n        if (value > min) decrement(label);\r\n    };\r\n\r\n    const handleRangeChange = (e) => {\r\n        updateValue(label, e.target.value);\r\n    };\r\n\r\n    const handleWheel = (e) => {\r\n        // Scroll Up\r\n        if (e.deltaY < 0) {\r\n            handleIncrement();\r\n        }\r\n        // Scroll Down\r\n        else if (e.deltaY > 0) {\r\n            handleDecrement();\r\n        }\r\n    };\r\n\r\n    const btnIconRef = useCallback((node) => {\r\n        if (node !== null) {\r\n            node.children[0].insertBefore(\r\n                node.children[0].children[1],\r\n                node.children[0].children[0]\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className='phase-control' onWheel={handleWheel}>\r\n            <span id={`${label}-label`} className='label'>\r\n                {label} length\r\n            </span>\r\n            <button\r\n                id={`${label}-decrement`}\r\n                className='decrement icon-btn'\r\n                onClick={handleDecrement}\r\n                ref={btnIconRef}\r\n            >\r\n                <CgArrowDownR className='icon-arrow-down' />\r\n            </button>\r\n            <span id={`${label}-length`} className='value'>\r\n                {value}\r\n            </span>\r\n            <button\r\n                id={`${label}-increment`}\r\n                className='increment icon-btn'\r\n                onClick={handleIncrement}\r\n                ref={btnIconRef}\r\n            >\r\n                <CgArrowUpR className='icon-arrow-up' />\r\n            </button>\r\n            <input\r\n                type='range'\r\n                min={min}\r\n                max={max}\r\n                step='1'\r\n                value={value}\r\n                onChange={handleRangeChange}\r\n                className='slider'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhaseControl;\r\n","import './Timer.css';\r\n\r\nconst Timer = ({ phase, value }) => {\r\n    return (\r\n        <div className='timer-clock'>\r\n            <h3 id='timer-label' className='label'>\r\n                {phase}\r\n            </h3>\r\n            <h2 id='time-left' className='value'>\r\n                {value}\r\n            </h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nconst useResizeObserver = () => {\r\n    const [dimensions, setDimensions] = useState({});\r\n    const containerRef = useRef(null);\r\n    const observer = useRef(\r\n        new ResizeObserver((entries) => {\r\n            const { width, height } = entries[0].contentRect;\r\n            setDimensions({ width, height });\r\n        })\r\n    );\r\n    useEffect(() => {\r\n        const observerRefValue = observer;\r\n        const elementRef = containerRef;\r\n        if (observerRefValue && observerRefValue.current) {\r\n            observerRefValue.current.observe(elementRef.current);\r\n        }\r\n        return () => {\r\n            if (observerRefValue && observerRefValue.current) {\r\n                observerRefValue.current.unobserve(elementRef.current);\r\n            }\r\n        };\r\n    }, [containerRef]);\r\n\r\n    return [containerRef, dimensions];\r\n};\r\n\r\nexport default useResizeObserver;\r\n","import './AnalogueClock.css';\r\nimport useResizeObserver from '../../hooks/useResizeObserver';\r\n\r\nconst AnalogueClock = ({ time }) => {\r\n    const [containerRef, dimensions] = useResizeObserver();\r\n    const size = dimensions.width < dimensions.height ? dimensions.width : dimensions.height;\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n\r\n    const secondHandDeg = (seconds / 60) * 360;\r\n    // const minuteHandDeg = (minutes / 60) * 360 + (seconds / 60) * 6;\r\n    const minuteHandDeg = (minutes / 60) * 360;\r\n\r\n    return (\r\n        <div className='analogue-clock-container' ref={containerRef}>\r\n            <div className='analogue-clock' style={{ width: `${size}px`, height: `${size}px` }}>\r\n                <div className='outer-face'>\r\n                    <span className='mark mark-one' />\r\n                    <span className='mark mark-two' />\r\n                    <span className='mark mark-three' />\r\n                    <span className='mark mark-four' />\r\n                    <div className='inner-face'>\r\n                        <span\r\n                            className='hand second-hand'\r\n                            style={{ transform: `rotate(${secondHandDeg}deg)` }}\r\n                        />\r\n                        <span\r\n                            className='hand minute-hand'\r\n                            style={{ transform: `rotate(${minuteHandDeg}deg)` }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalogueClock;\r\n","import './SliderClock.css';\r\n\r\nconst SliderClock = ({ time }) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    const minuteTens = Math.floor(minutes / 10);\r\n    const minuteSingles = minutes - minuteTens * 10;\r\n    const secondTens = Math.floor(seconds / 10);\r\n    const secondSingles = seconds - secondTens * 10;\r\n\r\n    const arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n    return (\r\n        <div className='slider-clock'>\r\n            <div className='minute-tens'>\r\n                {arr.map((item, index) => {\r\n                    return (\r\n                        <span\r\n                            key={index}\r\n                            className={'slider-num'}\r\n                            style={{ transform: `translateY(calc(${minuteTens - index} * 4rem))` }}\r\n                        >\r\n                            {item}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <div className='minute-singles'>\r\n                {arr.map((item, index) => {\r\n                    return (\r\n                        <span\r\n                            key={index}\r\n                            className={'slider-num'}\r\n                            style={{\r\n                                transform: `translateY(calc(${minuteSingles - index} * 4rem))`,\r\n                            }}\r\n                        >\r\n                            {item}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className='slider-clock-divider'>:</div>\r\n            <div className='seconds-tens'>\r\n                {arr.map((item, index) => {\r\n                    return (\r\n                        <span\r\n                            key={index}\r\n                            className={`${\r\n                                index === secondTens ? 'slider-num active' : 'slider-num inactive'\r\n                            }`}\r\n                            style={{ transform: `translateY(calc(${secondTens - index} * 4rem))` }}\r\n                        >\r\n                            {item}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className='seconds-singles'>\r\n                {arr.map((item, index) => {\r\n                    return (\r\n                        <span\r\n                            key={index}\r\n                            className={`${\r\n                                index === secondSingles\r\n                                    ? 'slider-num active'\r\n                                    : 'slider-num inactive'\r\n                            }`}\r\n                            style={{\r\n                                transform: `translateY(calc(${secondSingles - index} * 4rem))`,\r\n                            }}\r\n                        >\r\n                            {item}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SliderClock;\r\n","import { convertSeconds } from '../../lib/convertToTime';\r\nimport './ProgressClock.css';\r\n\r\nconst ProgressClock = ({ time, minutesMax }) => {\r\n    const minutes = time / 60;\r\n    const seconds = time % 60;\r\n\r\n    // For now times the size by 16 to get the rem value.\r\n    const secSize = 100;\r\n    const strokeWidth = 10;\r\n    const secRadius = (secSize - strokeWidth) / 2;\r\n    const secCircumference = secRadius * 2 * Math.PI;\r\n\r\n    // Work out the offset by getting the percentage of Pi * radius\r\n    const secPercentage = 100 - (seconds / 60) * 100;\r\n    // const secStrokeDashOffset = ((Math.PI * 2) / 100) * secPercentage * secRadius;\r\n    const secStrokeDashOffset =\r\n        minutes === minutesMax && seconds === 0\r\n            ? 0\r\n            : minutes === 0 && seconds === 0\r\n            ? ((Math.PI * 2) / 100) * 100 * secRadius\r\n            : seconds === 0\r\n            ? 0\r\n            : ((Math.PI * 2) / 100) * secPercentage * secRadius;\r\n\r\n    // Create minute circle\r\n    const minSize = 75;\r\n    const minRadius = (minSize - strokeWidth) / 2;\r\n    const minCircumference = minRadius * 2 * Math.PI;\r\n    const minXY = (secSize - minSize) / 2;\r\n\r\n    const minPercentage = 100 - (minutes / minutesMax) * 100;\r\n    const minStrokeDashOffset = ((Math.PI * 2) / 100) * minPercentage * minRadius;\r\n\r\n    return (\r\n        <div className='progress-clock'>\r\n            {/* \r\n                All circles are rotated from the center origin to -90degs to start from top.\r\n                Minute circles are also translated to center.\r\n            */}\r\n            <svg viewBox='0 0 100 100'>\r\n                <circle\r\n                    className='progress-clock-background'\r\n                    cx={secSize / 2}\r\n                    cy={secSize / 2}\r\n                    r={secRadius}\r\n                    strokeWidth={strokeWidth / 1.4}\r\n                />\r\n                {/* Seconds Background Circle */}\r\n                <circle\r\n                    className='progress-clock-seconds background'\r\n                    cx={secSize / 2}\r\n                    cy={secSize / 2}\r\n                    r={secRadius}\r\n                    strokeWidth={strokeWidth / 1.4}\r\n                    transform={`rotate(-90 ${secSize / 2} ${secSize / 2})`}\r\n                />\r\n                {/* Seconds Progress Circle */}\r\n                <circle\r\n                    className='progress-clock-seconds progress'\r\n                    cx={secSize / 2}\r\n                    cy={secSize / 2}\r\n                    r={secRadius}\r\n                    strokeDasharray={`${secCircumference} ${secCircumference}`}\r\n                    strokeWidth={strokeWidth}\r\n                    transform={`rotate(-90 ${secSize / 2} ${secSize / 2})`}\r\n                    style={{\r\n                        transition: 'all 0.3s',\r\n                        strokeDashoffset: `${secStrokeDashOffset}`,\r\n                    }}\r\n                />\r\n\r\n                {/* Minutes Background Circle */}\r\n                <circle\r\n                    className='progress-clock-minutes background'\r\n                    cx={minSize / 2}\r\n                    cy={minSize / 2}\r\n                    r={minRadius}\r\n                    strokeWidth={strokeWidth / 1.4}\r\n                    transform={`rotate(-90 ${secSize / 2} ${\r\n                        secSize / 2\r\n                    }) translate(${minXY}, ${minXY})`}\r\n                />\r\n                {/* Minutes Progress Circle */}\r\n                <circle\r\n                    className='progress-clock-minutes progress'\r\n                    cx={minSize / 2}\r\n                    cy={minSize / 2}\r\n                    r={minRadius}\r\n                    strokeDasharray={`${minCircumference} ${minCircumference}`}\r\n                    strokeWidth={strokeWidth}\r\n                    transform={`rotate(-90 ${secSize / 2} ${\r\n                        secSize / 2\r\n                    }) translate(${minXY}, ${minXY})`}\r\n                    style={{\r\n                        transition: 'all 0.3s',\r\n                        strokeDashoffset: `${minStrokeDashOffset}`,\r\n                    }}\r\n                />\r\n            </svg>\r\n            <span>{convertSeconds(time)}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressClock;\r\n","import './TimerControl.css';\r\nimport { CgPlayButtonR, CgPlayPauseR, CgPlayStopR } from 'react-icons/cg';\r\nimport { useCallback } from 'react';\r\n\r\nconst TimerControl = ({ isRunning, onStartStop, onReset }) => {\r\n    const btnIconRef = useCallback((node) => {\r\n        if (node !== null) {\r\n            node.children[0].insertBefore(\r\n                node.children[0].children[1],\r\n                node.children[0].children[0]\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    const btnPauseRef = useCallback((node) => {\r\n        if (node !== null) {\r\n            node.children[0].insertBefore(\r\n                node.children[0].children[2],\r\n                node.children[0].children[0]\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className='timer-control'>\r\n            <button\r\n                id='start_stop'\r\n                className='icon-btn'\r\n                onClick={onStartStop}\r\n                ref={isRunning ? btnPauseRef : null}\r\n            >\r\n                {isRunning ? (\r\n                    <CgPlayPauseR className='icon-pause' />\r\n                ) : (\r\n                    <CgPlayButtonR className='icon-play' />\r\n                )}\r\n            </button>\r\n            <button id='reset' className='icon-btn' onClick={onReset} ref={btnIconRef}>\r\n                <CgPlayStopR className='icon-stop' />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimerControl;\r\n","import React, { useState } from 'react';\r\nimport { VscChevronLeft, VscChevronRight } from 'react-icons/vsc';\r\nimport './CarouselContainer.css';\r\n\r\nconst CarouselContainer = ({ children }) => {\r\n    const [current, setCurrent] = useState(0);\r\n    const [touchStart, setTouchStart] = useState(0);\r\n    const [touchEnd, setTouchEnd] = useState(0);\r\n\r\n    const prevClicked = () => {\r\n        const newIndex = current - 1;\r\n        setCurrent(newIndex < 0 ? children.length - 1 : newIndex);\r\n    };\r\n\r\n    const nextClicked = () => {\r\n        const newIndex = current + 1;\r\n        setCurrent(newIndex > children.length - 1 ? 0 : newIndex);\r\n    };\r\n\r\n    const handleTouchStart = (e) => {\r\n        setTouchStart(e.targetTouches[0].clientX);\r\n    };\r\n\r\n    const handleTouchMove = (e) => {\r\n        setTouchEnd(e.targetTouches[0].clientX);\r\n    };\r\n\r\n    const handleTouchEnd = () => {\r\n        if (touchEnd === 0) return;\r\n\r\n        if (touchStart - touchEnd > 150) {\r\n            // do your stuff here for left swipe\r\n            nextClicked();\r\n        }\r\n\r\n        if (touchStart - touchEnd < -150) {\r\n            // do your stuff here for right swipe\r\n            prevClicked();\r\n        }\r\n\r\n        setTouchStart(0);\r\n        setTouchEnd(0);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className='carousel-container'\r\n            onTouchStart={handleTouchStart}\r\n            onTouchMove={handleTouchMove}\r\n            onTouchEnd={handleTouchEnd}\r\n        >\r\n            <button className='carousel-btn-prev icon-btn' onClick={prevClicked}>\r\n                <span className='visually-hidden'>Previous</span>\r\n                <VscChevronLeft />\r\n            </button>\r\n            <button className='carousel-btn-next icon-btn' onClick={nextClicked}>\r\n                <span className='visually-hidden'>Previous</span>\r\n                <VscChevronRight />\r\n            </button>\r\n            {children.map((child, index) => {\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className={`carousel-child ${\r\n                            index < current ? 'prev' : index > current ? 'next' : 'active'\r\n                        }`}\r\n                    >\r\n                        {child}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselContainer;\r\n","import { useClockContext } from '../../hooks/clockContext';\r\nimport { convertSeconds } from '../../lib/convertToTime';\r\nimport phaseTypes from '../../lib/phaseTypes';\r\nimport timerStyles from '../../lib/timerStyles';\r\nimport PhaseControl from '../PhaseControl/PhaseControl';\r\nimport Timer from '../Timer/Timer';\r\nimport AnalogueClock from '../AnalogueClock/AnalogueClock';\r\nimport SliderClock from '../SliderClock/SliderClock';\r\nimport ProgressClock from '../ProgressClock/ProgressClock';\r\nimport TimerControl from '../TimerControl/TimerControl';\r\nimport './Container.css';\r\nimport CarouselContainer from '../CarouselContainer/CarouselContainer';\r\n\r\nconst Container = () => {\r\n    const {\r\n        sessionTime,\r\n        breakTime,\r\n        onIncrement,\r\n        onDecrement,\r\n        updatePhaseTime,\r\n        timerValue,\r\n        timerPhase,\r\n        isRunning,\r\n        startStopTimer,\r\n        resetTimer,\r\n        timerStyle,\r\n        updateTimerStyle,\r\n    } = useClockContext();\r\n\r\n    const getTimerComponent = () => {\r\n        switch (timerStyle) {\r\n            case timerStyles.SIMPLE:\r\n                return <Timer value={convertSeconds(timerValue)} phase={timerPhase} />;\r\n\r\n            case timerStyles.ANALOGUE:\r\n                return <AnalogueClock time={timerValue} />;\r\n\r\n            case timerStyles.SLIDER:\r\n                return <SliderClock time={timerValue} />;\r\n\r\n            case timerStyles.PROGRESS:\r\n                return (\r\n                    <ProgressClock\r\n                        time={timerValue}\r\n                        minutesMax={timerPhase === phaseTypes.SESSION ? sessionTime : breakTime}\r\n                    />\r\n                );\r\n\r\n            default:\r\n                return <Timer value={convertSeconds(timerValue)} phase={timerPhase} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className='container'>\r\n            <h1>25 + 5 Clock</h1>\r\n            <PhaseControl\r\n                label={phaseTypes.BREAK}\r\n                value={breakTime}\r\n                increment={onIncrement}\r\n                decrement={onDecrement}\r\n                updateValue={updatePhaseTime}\r\n                min={1}\r\n                max={60}\r\n            />\r\n            <PhaseControl\r\n                label={phaseTypes.SESSION}\r\n                value={sessionTime}\r\n                increment={onIncrement}\r\n                decrement={onDecrement}\r\n                updateValue={updatePhaseTime}\r\n                min={1}\r\n                max={60}\r\n            />\r\n\r\n            <CarouselContainer>\r\n                <Timer value={convertSeconds(timerValue)} phase={timerPhase} />\r\n                <SliderClock time={timerValue} />\r\n                <AnalogueClock time={timerValue} />\r\n                <ProgressClock\r\n                    time={timerValue}\r\n                    minutesMax={timerPhase === phaseTypes.SESSION ? sessionTime : breakTime}\r\n                />\r\n            </CarouselContainer>\r\n\r\n            <TimerControl isRunning={isRunning} onStartStop={startStopTimer} onReset={resetTimer} />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Container;\r\n","import ClockProvider from '../../hooks/clockContext';\r\nimport Container from '../Container/Container';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <main>\r\n            <ClockProvider>\r\n                <Container />\r\n            </ClockProvider>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}